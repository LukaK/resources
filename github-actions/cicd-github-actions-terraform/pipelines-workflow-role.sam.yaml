AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::LanguageExtensions'

Parameters:

  GithubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String

  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String

  GithubOidcArn:
    Description: Arn for the GitHub OIDC Provider.
    Type: String

  TerraformStateBucketName:
    Description: Name of terraform state bucket
    Type: String

  TerraformLockTableName:
    Description: Name of terraform lock table
    Type: String

  TargetAccounts:
    Description: List of account target account ids
    Type: CommaDelimitedList

Resources:

  GithubWorkflowRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ghw-role-${RepositoryName}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GithubOidcArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GithubOrg}/${RepositoryName}:ref:refs/heads/main
      Policies:
        - PolicyName: terraform-state-bucket-permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListObjects
                  - s3:ListObjectsV2
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${TerraformStateBucketName}/*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${TerraformStateBucketName}"
        - PolicyName: terraform-lock-table-permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                Resource:
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TerraformLockTableName}"


  'Fn::ForEach::Policies':
    - AccountId
    - !Ref TargetAccounts
    - 'AssumePolicy${AccountId}':
        Type: 'AWS::IAM::Policy'
        Properties:
          PolicyName: !Sub "assume-role-${AccountId}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                    - !Sub "arn:aws:iam::${AccountId}:role/target-account-deployment-role"
          Roles:
            - !Ref GithubWorkflowRole


Outputs:

  GithubWorkflowRoleArn:
    Value: !GetAtt GithubWorkflowRole.Arn
    Description: Arn of github workflow role
